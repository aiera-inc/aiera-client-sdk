import React, { MouseEventHandler, ReactElement, useCallback } from 'react';
import { DateTime } from 'luxon';
import { match } from 'ts-pattern';

import { ArrowLeft } from '@aiera/client-sdk/components/Svg/ArrowLeft';
import { Button } from '@aiera/client-sdk/components/Button';
import { Input } from '@aiera/client-sdk/components/Input';
import { MagnifyingGlass } from '@aiera/client-sdk/components/Svg/MagnifyingGlass';
import { useChangeHandlers } from '@aiera/client-sdk/lib/hooks/useChangeHandlers';
import { safeRegExp, titleize } from '@aiera/client-sdk/lib/strings';
import { ContentType } from '@aiera/client-sdk/modules/ContentList';
import { ChangeHandler } from '@aiera/client-sdk/types';
import './styles.css';

interface ContentSharedProps {
    companyIdentifier?: string;
    contentType: ContentType; // this should be generated by the server
    date?: string;
    exchangeName?: string;
    onBack?: MouseEventHandler;
    sourceName?: string;
    title?: string;
}

/** @notExported */
interface ContentUIProps extends ContentSharedProps {
    body?: string;
    onChangeSearch?: ChangeHandler<string>;
    searchTerm: string;
}

export function ContentUI(props: ContentUIProps): ReactElement {
    const {
        body,
        companyIdentifier,
        contentType,
        date,
        exchangeName,
        onBack,
        onChangeSearch,
        searchTerm,
        sourceName,
        title,
    } = props;
    const backButton = (contentType: ContentType): ReactElement => (
        <Button className="mr-2" onClick={onBack}>
            <ArrowLeft className="fill-current text-black w-3.5 z-1 relative mr-2 group-active:fill-current group-active:text-white" />
            {titleize(ContentType[contentType])}
        </Button>
    );
    return (
        <div className="h-full flex flex-col content">
            <div className="flex flex-col pl-3 pr-3 pt-3 shadow-3xl content__header">
                <div className="flex items-center mb-3">
                    {match(contentType)
                        .with(ContentType.news, () => (
                            <>
                                {onBack && backButton(ContentType.news)}
                                <Input
                                    icon={<MagnifyingGlass />}
                                    name="search"
                                    placeholder="Search News..."
                                    value={searchTerm}
                                    onChange={onChangeSearch}
                                />
                            </>
                        ))
                        .with(ContentType.corporateActivity, () => onBack && backButton(ContentType.corporateActivity))
                        .exhaustive()}
                </div>
            </div>
            {companyIdentifier && (
                <div className="flex items-center pl-5 pr-5 pt-5 text-sm">
                    <span className="font-bold pr-1 text-blue-600">{companyIdentifier}</span>
                    <span className="font-light text-gray-300">{exchangeName}</span>
                </div>
            )}
            {title && (
                <div className="leading-4 pl-5 pr-5 pt-3">
                    <span className="font-bold text-base">{title}</span>
                </div>
            )}
            {(sourceName || date) && (
                <div className="flex items-center pl-5 pr-5 pt-2 text-sm">
                    {sourceName && <span className="text-indigo-300">{sourceName}</span>}
                    {sourceName && date && <span className="pl-1 pr-1 text-gray-400">â€¢</span>}
                    {date && <span className="text-gray-400">{DateTime.fromISO(date).toFormat('MMM dd, yyyy')}</span>}
                </div>
            )}
            {body && (
                <div
                    className="leading-4 overflow-y-auto pb-3 pl-5 pr-5 pt-3 text-sm"
                    dangerouslySetInnerHTML={{ __html: body }}
                />
            )}
        </div>
    );
}

/** @notExported */
export interface ContentProps extends ContentSharedProps {}

interface ContentState {
    searchTerm: string;
}

/**
 * Renders Content
 */
export function Content(props: ContentProps): ReactElement {
    const { state, handlers } = useChangeHandlers<ContentState>({ searchTerm: '' });
    const searchTerm: string = state.searchTerm;
    /**
     * Split the text and insert styled spans (yellow bg-color)
     * when there are matches for the search term
     *
     * @param body - the Content HTML string
     *
     * @returns - a string
     */
    const highlightedBody = useCallback(
        (body: string) => {
            let highlighted = body;
            const safeSearch: RegExp | null = safeRegExp(searchTerm);
            if (safeSearch) {
                const parts: string[] = body.split(safeSearch);
                highlighted = parts
                    .map((part: string) => {
                        if (part.toLowerCase().includes(searchTerm.toLowerCase())) {
                            return `<span class="bg-yellow-300">${part}</span>`;
                        }
                        return part;
                    })
                    .join('');
            }
            return highlighted;
        },
        [searchTerm]
    );
    // TODO replace with body from content query
    const mockBody = `
        <span>
            Netflix, Inc., an Internet television network, engages in the Internet delivery of television (TV) shows and
            movies on various Internet-connected screens. The company operates in three segments: Domestic Streaming,
            International Streaming, and Domestic DVD. It offers members with the ability to receive streaming content
            through a host of Internet-connected screens, including TVs, digital video players, television set-top boxes
            , and mobile devices.
            <br />
            <br />
            The company also provides DVDs-by-mail membership services. It serves approximately 93 million streaming
            members in 190 countries. Netflix, Inc. was founded in 1997 and is headquartered in Los Gatos, California.
        </span>
    `;
    const { companyIdentifier, contentType, date, exchangeName, onBack, sourceName, title } = props;
    return (
        <ContentUI
            body={highlightedBody(mockBody)}
            companyIdentifier={companyIdentifier}
            contentType={contentType}
            date={date}
            exchangeName={exchangeName}
            onBack={onBack}
            onChangeSearch={handlers.searchTerm}
            searchTerm={searchTerm}
            sourceName={sourceName}
            title={title}
        />
    );
}
